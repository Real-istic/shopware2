"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["button-color"],{6795:(e,t,r)=>{var i=r(4229),n=r(3206),a=r(8254);class o extends i.Z{init(){this.PluginManager=window.PluginManager,this._cartEl=n.Z.querySelector(document,"[data-add-to-cart]"),this._cartEL2=n.Z.querySelector(document,".header-cart"),this._client=new a.Z(window.accessKey,window.contextToken),super.init(),Array.from(document.querySelectorAll(".btn-buy")).forEach((e=>{e.addEventListener("click",(e=>{e.preventDefault(),this._buttonClicked(e.target)}))}))}_refreshCartValue(){const e=n.Z.querySelector(this._cartEL2,"[data-cart-widget]");this.PluginManager.getPluginInstanceFromElement(e,"CartWidget").fetch()}_buttonClicked(e){this._openOffCanvasCart(e)}_openOffCanvasCart(e){const t=e.form.action,r=new FormData(e.form);this._client.post(t,r,this._afterAddItemToCart.bind(this,e))}_afterAddItemToCart(e){this._refreshCartValue(),this._changeButtonAppearance(e)}_changeButtonAppearance(e){e.classList.add("confirm-color"),e.innerText="Wird in den Warenkorb gelegt",setTimeout((()=>{e.classList.remove("confirm-color"),e.innerText="In den Warenkorb"}),1e3)}}window.PluginManager.override("AddToCart",o,"[data-add-to-cart]")},4229:(e,t,r)=>{r.d(t,{Z:()=>f});var i,n,a,o=r(6285),s=r(9068),c=r(1966),d=r(3206),l=r(207);class f extends o.Z{init(){if(this._getForm(),!this._form)throw new Error(`No form found for the plugin: ${this.constructor.name}`);this._prepareFormRedirect(),this._registerEvents()}_prepareFormRedirect(){try{const e=d.Z.querySelector(this._form,this.options.redirectSelector),t=d.Z.querySelector(this._form,this.options.redirectParamSelector);e.value=this.options.redirectTo,t.disabled=!0}catch(e){}}_getForm(){this.el&&"FORM"===this.el.nodeName?this._form=this.el:this._form=this.el.closest("form")}_registerEvents(){this.el.addEventListener("submit",this._formSubmit.bind(this))}_formSubmit(e){e.preventDefault();const t=d.Z.getAttribute(this._form,"action"),r=l.Z.serialize(this._form);this.$emitter.publish("beforeFormSubmit",r),this._openOffCanvasCarts(t,r)}_openOffCanvasCarts(e,t){const r=s.Z.getPluginInstances("OffCanvasCart");c.Z.iterate(r,(r=>this._openOffCanvasCart(r,e,t)))}_openOffCanvasCart(e,t,r){e.openOffCanvas(t,r,(()=>{this.$emitter.publish("openOffCanvasCart")}))}}i=f,a={redirectSelector:'[name="redirectTo"]',redirectParamSelector:'[data-redirect-parameters="true"]',redirectTo:"frontend.cart.offcanvas"},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,t||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(n="options"))in i?Object.defineProperty(i,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):i[n]=a}},e=>{e.O(0,["vendor-node","vendor-shared"],(()=>{return t=6795,e(e.s=t);var t}));e.O()}]);